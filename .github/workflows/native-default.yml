# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - uses: graalvm/setup-graalvm@v1
      with:
        version: 'latest'
        java-version: '17'
        components: 'native-image'
    - name: Info
      run: whoami & pwd & apt install -y tar
#    - name: Build Native Image
#      run: mvn -B package -f native/pom.xml -Pnative
#    - name: Verify Native Image
#      run: ./native/target/native
#    - name: Build UPX Native
#      run: wget https://github.com/upx/upx/releases/download/v4.0.1/upx-4.0.1-amd64_linux.tar.xz && \
#           tar -zxvf upx-4.0.1-amd64_linux && \
#           ./upx-4.0.1-amd64_linux/upx --lzma --best ./native/target/native -o ./native/target/native.upx
#    - name: Verify UPX Native
#      run: ./native/target/native.upx

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # This didn't work! : (
#    - name: Update dependency graph
#      uses: advanced-security/maven-dependency-submission-action@multi-module
